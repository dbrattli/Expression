[tool.poetry]
name = "Expression"
version = "0.0.0" # NOTE: will be updated by publish script
description = "Practical functional programming for Python 3.9+"
readme = "README.md"
authors = ["Dag Brattli <dag.brattli@cognite.com>"]
license = "MIT License"
homepage = "https://github.com/cognitedata/Expression"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: Implementation :: CPython",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">= 3.9, < 4"
typing-extensions = "^4.1.1"

[tool.poetry.dev-dependencies]
pytest-asyncio = "^0.20.0"
pytest = "^7.2.0"
coverage = "^6.4.3"
black = "^23.0.0"
isort = "^5.10.1"
flake8 = "^6.0.0"
coveralls = "^3.3.1"
pre-commit = "^3.0.0"
autoflake = "^1.4"
dunamai = "^1.12.0"
hypothesis = "^6.54.2"
jupyter-book = "^0.15.0"
sphinx-autodoc-typehints = "^1.17.0"
pydantic = "^1.9.0"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.py$'
extend-exclude = '^/docs'

[tool.isort]
profile = "black"
line_length=88                 # corresponds to -w  flag
multi_line_output=3            # corresponds to -m  flag
include_trailing_comma=true    # corresponds to -tc flag
src_paths = ["expression"]
float_to_top=true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "strict"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
